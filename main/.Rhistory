knitr::opts_chunk$set(warning = F,
message = F)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(zoo)
pitches_2015 <- read_csv('./data/Pitchers2015.csv')
head(pitches_2015)
injuries_2016 <- read_csv('./data/injuries_2016.csv')
head(injuries_2016)
df2014 <- read_csv('./data/batters2014.csv')
head(df2014)
# Install all necessary packages
library(dplyr)
library(tidyverse)
library(ggplot2)
library(zoo)
# Install all necessary packages
library(dplyr)
library(tidyverse)
library(ggplot2)
library(zoo)
pitches_2015 <- read_csv('./data/Pitchers2015.csv')
injuries_2016 <- read_csv('./data/injuries_2016.csv')
pitches_2016 <- read_csv('./data/Pitchers2016.csv')
injuries_2017 <- read_csv('./data/injuries_2017.csv')
# join each year before concatting them
joined1 <- merge(injuries_2016, pitches_2015, by.x = "name", by.y = "name", all.y = T)
joined1$year <- '2016'
joined2 <- merge(injuries_2017, pitches_2016, by.x = "name", by.y = "name", all.y = T)
joined2$year <- '2017'
joined <- rbind(joined1, joined2)
joined_pitchers <- filter(joined, pos == "RP" | pos == "SP")
extract_injury <- function(val) { strsplit(val, "/")[[1]][[1]] }
# @param df pitch dataframe joined with injury data
clean <- function(df) {
percent_cols <- colnames(df)[8:16]
f <- function(val) { sub("%", "", val) }
df[percent_cols] <- sapply(df[percent_cols], f)
df[percent_cols] <- sapply(df[percent_cols], as.numeric)
# if a pitcher never throws a pitch
df[percent_cols][is.na(df[percent_cols])] <- 0
df$type[is.na(df$type)] <- "None"
df$days[is.na(df$days)] <- 0
df$type <- sapply(df$type, extract_injury)
df
}
joined <- clean(joined)
joined_pitchers <- clean(joined_pitchers)
joined_pitchers <- mutate(group_by(joined_pitchers, type), cnt = n())
joined_pitchers <- filter(joined_pitchers, cnt >= 10)
ggplot(joined_pitchers, aes(x=type, y=Pitches)) + geom_jitter() + coord_flip()
ggplot(joined_pitchers, aes(x=type, y=vFA)) + geom_jitter() + coord_flip()
ggplot(filter(joined, days < 180), aes(x=reorder(type, days, FUN = median), y=days)) + geom_boxplot() + coord_flip()
ggplot(filter(joined, days < 180), aes(x=reorder(type, days, FUN = median), y=days)) + geom_jitter() + coord_flip()
percent_cols <- colnames(joined)[8:16]
# tidy the data so we can facet on pitch types
g <- gather(filter(joined_pitchers), pt, pt_pct, percent_cols)
levels(g$pt) <- percent_cols
g <- arrange(g, pt)
ggplot(g, aes(x = type, y = pt_pct, fill = pt, order = pt)) + geom_bar(stat="summary", position = "dodge") + theme(axis.text.x = element_text(angle=30))
percent_cols_no_FA <- colnames(joined)[9:16]
# tidy the data so we can facet on pitch types
g <- gather(filter(joined_pitchers), pt, pt_pct, percent_cols_no_FA)
levels(g$pt) <- percent_cols_no_FA
g <- arrange(g, pt)
ggplot(g, aes(x = type, y = pt_pct, fill = pt, order = pt, width=0.8)) + geom_bar(stat="summary", position = "dodge") + theme(axis.text.x = element_text(angle=30))
injuries2015 <- read_csv('./data/injuries_2015.csv')
injuries2016 <- read_csv('./data/injuries_2016.csv')
df2014 <- read_csv('./data/batters2014.csv')
df2015 <- read_csv('./data/batters2015.csv')
df2016 <- read_csv('./data/batters2016.csv')
df2017 <- read_csv('./data/batters2017.csv')
df2014$year <- 2014
df2015$year <- 2015
df2016$year <- 2016
df2017$year <- 2017
process <- function(data, injuries) {
# we only want players who played in each season, and batted at least 150 times in 2015/2017
data <- mutate(group_by(data, name), cnt = n())
first_yr <- min(data$year)
third_yr <- max(data$year)
scnd_year <- (first_yr + third_yr) / 2
data <- filter(data, cnt == 3 & year != scnd_year)
# tidy till before and after
data <- mutate(data, occ = if_else(year == first_yr, "before", "after"))
data <- data %>% select(name, occ, SLG)
data <- spread(data, occ, SLG)
# merge the injuries
data <- merge(data, injuries, by.x = "name", by.y = "name", all.x = T)
data$type[is.na(data$type)] <- "None"
data$type <- sapply(data$type, extract_injury)
data
}
bat1 <- rbind(df2015, df2016, df2017)
bat2 <- rbind(df2014, df2015, df2016)
bat1 <- process(bat1, injuries2016)
bat2 <- process(bat2, injuries2015)
bat <- rbind(bat1, bat2)
ggplot(bat, aes(before, after)) + geom_point(aes(color = type))
bat <- mutate(bat, chng = before / after)
ggplot(bat) + geom_bar(aes(x = type, y = chng), stat="summary") + stat_summary(aes(x = type, y = chng), fun.y = "mean") + coord_flip()
# process injury data
i1 <- read_csv('./data/injuries_2015.csv')
i2 <- read_csv('./data/injuries_2016.csv')
i3 <- read_csv('./data/injuries_2017.csv')
i1$year = 2015
i2$year = 2016
i3$year = 2017
iAll <- rbind(i1, i2, i3)
iAll <- arrange(iAll, name, year)
iAll <- mutate(group_by(iAll, name), cnt = n())
# data <- mutate(data, occ = if_else(year == first_yr, "before", "after"))
iAll <- iAll %>% mutate(was_followed = if_else(cnt > 1 & year != 2017, 1, 0))
# remove 2017
iAll <- filter(iAll, year != 2017)
iAll$type <- sapply(iAll$type, extract_injury)
iAll <- iAll %>% group_by(type, was_followed) %>%
summarise(num_i = n()) %>%
mutate(prop = num_i / sum(num_i))
iAll <- iAll %>% mutate(followed = if_else(was_followed == 0, "No", "Yes"))
ggplot(iAll, aes(x = type, y = prop, fill = followed)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle=90))
## structure the data so that months are orderd included, in the date
hr <- read_csv('./data/homeRuns.csv')
# just make Mar/April April and Sep/Oct September
hr$Month[hr$Month == 'Mar/Apr'] <- 'Apr'
hr$Month[hr$Month == 'Sept/Oct'] <- 'Sep'
# zoo parser is much better
hr$Date <- as.yearmon(paste0(hr$Season, hr$Month), "%Y%b")
hr$Date <- as.Date(hr$Date)
ggplot(hr, aes(Date, y = HR)) + geom_line() + scale_x_date(labels = as.Date(hr$Date))
## structure the data so that months are orderd included, in the date
hr <- read_csv('./data/homeRuns.csv')
# just make Mar/April April and Sep/Oct September
hr$Month[hr$Month == 'Mar/Apr'] <- 'Apr'
hr$Month[hr$Month == 'Sept/Oct'] <- 'Sep'
# zoo parser is much better
hr$Date <- as.yearmon(paste0(hr$Season, hr$Month), "%Y%b")
hr$Date <- as.Date(hr$Date)
ggplot(hr, aes(Date, y = HR)) + geom_line() + scale_x_date(labels = as.Date(hr$Date))
knitr::opts_chunk$set(warning = F,
message = F)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(zoo)
pitches_2015 <- read_csv('./data/Pitchers2015.csv')
head(pitches_2015)
injuries_2016 <- read_csv('./data/injuries_2016.csv')
head(injuries_2016)
df2014 <- read_csv('./data/batters2014.csv')
head(df2014)
# Install all necessary packages
library(dplyr)
library(tidyverse)
library(ggplot2)
library(zoo)
pitches_2015 <- read_csv('./data/Pitchers2015.csv')
injuries_2016 <- read_csv('./data/injuries_2016.csv')
pitches_2016 <- read_csv('./data/Pitchers2016.csv')
injuries_2017 <- read_csv('./data/injuries_2017.csv')
# join each year before concatting them
joined1 <- merge(injuries_2016, pitches_2015, by.x = "name", by.y = "name", all.y = T)
joined1$year <- '2016'
joined2 <- merge(injuries_2017, pitches_2016, by.x = "name", by.y = "name", all.y = T)
joined2$year <- '2017'
joined <- rbind(joined1, joined2)
joined_pitchers <- filter(joined, pos == "RP" | pos == "SP")
extract_injury <- function(val) { strsplit(val, "/")[[1]][[1]] }
# @param df pitch dataframe joined with injury data
clean <- function(df) {
percent_cols <- colnames(df)[8:16]
f <- function(val) { sub("%", "", val) }
df[percent_cols] <- sapply(df[percent_cols], f)
df[percent_cols] <- sapply(df[percent_cols], as.numeric)
# if a pitcher never throws a pitch
df[percent_cols][is.na(df[percent_cols])] <- 0
df$type[is.na(df$type)] <- "None"
df$days[is.na(df$days)] <- 0
df$type <- sapply(df$type, extract_injury)
df
}
joined <- clean(joined)
joined_pitchers <- clean(joined_pitchers)
joined_pitchers <- mutate(group_by(joined_pitchers, type), cnt = n())
joined_pitchers <- filter(joined_pitchers, cnt >= 10)
ggplot(joined_pitchers, aes(x=type, y=Pitches)) + geom_jitter() + coord_flip()
ggplot(joined_pitchers, aes(x=type, y=vFA)) + geom_jitter() + coord_flip()
ggplot(filter(joined, days < 180), aes(x=reorder(type, days, FUN = median), y=days)) + geom_boxplot() + coord_flip()
ggplot(filter(joined, days < 180), aes(x=reorder(type, days, FUN = median), y=days)) + geom_jitter() + coord_flip()
percent_cols <- colnames(joined)[8:16]
# tidy the data so we can facet on pitch types
g <- gather(filter(joined_pitchers), pt, pt_pct, percent_cols)
levels(g$pt) <- percent_cols
g <- arrange(g, pt)
ggplot(g, aes(x = type, y = pt_pct, fill = pt, order = pt)) + geom_bar(stat="summary", position = "dodge") + theme(axis.text.x = element_text(angle=30))
percent_cols_no_FA <- colnames(joined)[9:16]
# tidy the data so we can facet on pitch types
g <- gather(filter(joined_pitchers), pt, pt_pct, percent_cols_no_FA)
levels(g$pt) <- percent_cols_no_FA
g <- arrange(g, pt)
ggplot(g, aes(x = type, y = pt_pct, fill = pt, order = pt, width=0.8)) + geom_bar(stat="summary", position = "dodge") + theme(axis.text.x = element_text(angle=30))
injuries2015 <- read_csv('./data/injuries_2015.csv')
injuries2016 <- read_csv('./data/injuries_2016.csv')
df2014 <- read_csv('./data/batters2014.csv')
df2015 <- read_csv('./data/batters2015.csv')
df2016 <- read_csv('./data/batters2016.csv')
df2017 <- read_csv('./data/batters2017.csv')
df2014$year <- 2014
df2015$year <- 2015
df2016$year <- 2016
df2017$year <- 2017
process <- function(data, injuries) {
# we only want players who played in each season, and batted at least 150 times in 2015/2017
data <- mutate(group_by(data, name), cnt = n())
first_yr <- min(data$year)
third_yr <- max(data$year)
scnd_year <- (first_yr + third_yr) / 2
data <- filter(data, cnt == 3 & year != scnd_year)
# tidy till before and after
data <- mutate(data, occ = if_else(year == first_yr, "before", "after"))
data <- data %>% select(name, occ, SLG)
data <- spread(data, occ, SLG)
# merge the injuries
data <- merge(data, injuries, by.x = "name", by.y = "name", all.x = T)
data$type[is.na(data$type)] <- "None"
data$type <- sapply(data$type, extract_injury)
data
}
bat1 <- rbind(df2015, df2016, df2017)
bat2 <- rbind(df2014, df2015, df2016)
bat1 <- process(bat1, injuries2016)
bat2 <- process(bat2, injuries2015)
bat <- rbind(bat1, bat2)
ggplot(bat, aes(before, after)) + geom_point(aes(color = type))
bat <- mutate(bat, chng = before / after)
ggplot(bat) + geom_bar(aes(x = type, y = chng), stat="summary") + stat_summary(aes(x = type, y = chng), fun.y = "mean") + coord_flip()
# process injury data
i1 <- read_csv('./data/injuries_2015.csv')
i2 <- read_csv('./data/injuries_2016.csv')
i3 <- read_csv('./data/injuries_2017.csv')
i1$year = 2015
i2$year = 2016
i3$year = 2017
iAll <- rbind(i1, i2, i3)
iAll <- arrange(iAll, name, year)
iAll <- mutate(group_by(iAll, name), cnt = n())
# data <- mutate(data, occ = if_else(year == first_yr, "before", "after"))
iAll <- iAll %>% mutate(was_followed = if_else(cnt > 1 & year != 2017, 1, 0))
# remove 2017
iAll <- filter(iAll, year != 2017)
iAll$type <- sapply(iAll$type, extract_injury)
iAll <- iAll %>% group_by(type, was_followed) %>%
summarise(num_i = n()) %>%
mutate(prop = num_i / sum(num_i))
iAll <- iAll %>% mutate(followed = if_else(was_followed == 0, "No", "Yes"))
ggplot(iAll, aes(x = type, y = prop, fill = followed)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle=90))
## structure the data so that months are orderd included, in the date
hr <- read_csv('./data/homeRuns.csv')
# just make Mar/April April and Sep/Oct September
hr$Month[hr$Month == 'Mar/Apr'] <- 'Apr'
hr$Month[hr$Month == 'Sept/Oct'] <- 'Sep'
# zoo parser is much better
hr$Date <- as.yearmon(paste0(hr$Season, hr$Month), "%Y%b")
hr$Date <- as.Date(hr$Date)
ggplot(hr, aes(Date, y = HR)) + geom_line() + scale_x_date(labels = as.Date(hr$Date))
